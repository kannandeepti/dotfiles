# 0 is too far from ` ;)
set -g base-index 1

set -g default-command "${SHELL}"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g default-terminal xterm-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
# if-shell "vercomp -gt `tmux -V | cut -d' ' -f2 | tr -d '\r' | tr -d '\n'` 1.9" \
#     'set -g mouse on' \
#     'setw -g mode-mouse on; setw -g mouse-resize-pane on; setw -g mouse-select-pane on; setw -g mouse-select-window on'
setw -g monitor-activity on
setw -g mouse on
setw -g mouse-utf8 on

## # for terminator
# prevents unscrollability
set -g mouse-utf8 off
# prevents garbage output on copy
set-option -s set-clipboard off

bind-key v split-window -h
bind-key s split-window -v

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key S-M-j resize-pane -D
bind-key S-M-k resize-pane -U
bind-key S-M-h resize-pane -L
bind-key S-M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# Set up workflow for CJW Lab
#
new  -n Shell  "/usr/bin/env bash"
splitw -h -p 50 -t 0 "bash"
#neww -n Julia 'bash -ic "julia"'
#splitw -h -p 50 -t 0 "bash"
#neww -n Mathematica  "bash -ic /opt/Wolfram/Mathematica/10.0/Executables/math"
#splitw -h -p 50 -t 0 "bash"
#neww -n Asciiquarium "~/bin/asciiquarium"
neww -n Media  "bash ~/.profile && bash -ic /usr/bin/ncmpcpp"
neww -n MissionControl "/usr/bin/env bash"
splitw -v -p 50 -t 0 "bash"
splitw -v -p 50 -t 0 "bash"
splitw -v -p 50 -t 0 "bash"

# Fix my leader to be Ctrl-q
unbind-key C-b
set -g prefix 'C-q'
bind-key 'C-q' send-prefix

# vim integration
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# tmux plugins managed by TPM ("Tmux Plugin Manager")
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Other examples:
#set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
