#!/usr/bin/env bash

program_exists () {
    if type "$1" >/dev/null 2>&1; then
        return 0
    else
        return -1
    fi
}

is_already_running () {
    if [[ $(ps aux | grep "$1" | wc -l) -gt 1 ]]; then
        return 0
    else
        return false
    fi
}

# all actions below are now safe to re-execute, keeping this for doc purposes
#if [ -z ${_IMPORTED_BRUNO_XINITRC+x} ]; then
#    echo "Already imported xinitrc."
#else
#export _IMPORTED_BRUNO_XINITRC=1

# [ -x /usr/lib/notify-osd/notify-osd && `ps aux | grep notify-osd | wc -l` -gt 1 ] && /usr/lib/notify-osd/notify-osd &

# Configure PATH so that we can access our scripts below
[ -f ~/.set_path ] && source ~/.set_path

# fuck java, and its hardcoded bullshit
export _JAVA_AWT_WM_NONREPARENTING=1
# but for real. fuck java
wmname LG3D

# and make sure that ibus works in QT4 apps with
export GTK_IM_MODULE=ibus
export XMODIFIERS="@im=ibus"
export XIM_PROGRAM=/usr/bin/ibus-daemon
export XIM_ARGS="--xim"
export QT_IM_MODULE=ibus
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
ibus-daemon -drx

xmodmap -e 'keycode 66 = Control_L'
xmodmap -e 'clear Lock'
xmodmap -e 'add Control = Control_L'

# Detect and configure touchpad if present
if egrep -iq 'touchpad' /proc/bus/input/devices; then
    synclient VertTwoFingerScroll=1
    # fuck tap to click
    synclient TapButton1=0 TapButton2=0 TapButton3=0 &
    # three-finger = two-finger click
    synclient MaxTapTime=0 ClickFinger3=3 &
    # Java bug in horiz-scroll
    synclient VertTwoFingerScroll=1 HorizTwoFingerScroll=0
    # no simulated right button please
    synclient RightButtonAreaLeft=0  RightButtonAreaRight=0  RightButtonAreaTop=0  RightButtonAreaBottom=0 &
    # but sometimes I do want to scroll horizontally, this is easier to not accidentally hit
    synclient HorizEdgeScroll=1 VertEdgeScroll=0 HorizScrollDelta=35
    # sensitivity fix
    synclient VertHysteresis=24  HorizHysteresis=24 &
    # no touchpad input while typing
    syndaemon -d -t
fi

# now make sure that we use a standard cursor instead of the default "X"
xsetroot -cursor_name left_ptr

# run usual apps in the background
# and start a terminator session
if program_exists terminator && ! is_already_running terminator; then
    terminator --command="bash -ic 'tmux attach'" &
fi

#hash optirun 2>/dev/null \
    #&& optirun google-chrome "https://mail.google.com/mail/u/0/#inbox" "https://www.google.com/calendar/render#g" \
    #|| google-chrome "https://mail.google.com/mail/u/0/#inbox" "https://www.google.com/calendar/render#g" &
if program_exists iceweasel && ! is_already_running iceweasel; then
    iceweasel & # always-up pages are now pinned #"https://mail.google.com/mail/u/0/#inbox" "https://webmail.stanford.edu" "https://www.google.com/calendar/render#g" &
fi

# start f.lux for X in Palo Alto time zone
if program_exists xflux && ! is_already_running xflux; then
    xflux -z 94305 &
fi

# these two are run in the foreground since they must go in order and work can't
# start without them anyway

# autoxrandr.sh sets external monitor settings and wallpapers
if program_exists autoxrandr.sh; then
    /home/bbeltr1/bin/autoxrandr.sh
fi

# set the wallpaper
if program_exists feh; then
    feh --bg-fill /home/bbeltr1/Pictures/Wallpapers/japan-bridge.jpg
fi


#fi # end include wrapper

if program_exists xmonad && program_exists ck-launch-session; then
    exec ck-launch-session dbus-launch --sh-syntax --exit-with-session xmonad
else
    echo "ERROR: SUCCESSFULLY LAUNCHED X, BUT NO XMONAD/CONSOLEKIT EXECUTABLE EXISTS."
fi
